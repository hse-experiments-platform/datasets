syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

package github.hse_experiments_platform.datasets.api.datasets;

option go_package = "github.com/hse-experiments-platform/datasets;datasets";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "HSE MLOps Datasets service";
    version: "1.0";
    description: "Datasets service for mlops project.",
  };

  security_definitions: {
    security: {
      key: "AccessToken";
      value: {
        type: TYPE_API_KEY;
        description: "Enter the token with the `Bearer: ` prefix, e.g. \"Bearer abcde12345\""
        in: IN_HEADER;
        name: "Authorization";
      }
    }
  };

  schemes: HTTP;
  consumes: "application/json";
  produces: "application/json";
};

service DatasetsService {
  rpc CreateDataset (CreateDatasetRequest) returns (CreateDatasetResponse) {
    option (google.api.http) = {
      post: "/api/v1/dataset"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "AccessToken";value: {}}}
    };
  };
  rpc UploadDatasetByLink (UploadDatasetByLinkRequest) returns (UploadDatasetByLinkResponse) {
    option (google.api.http) = {
      post: "/api/v1/dataset/upload/link"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "AccessToken";value: {}}}
    };
  };
  rpc GetDatasets (GetDatasetsRequest) returns (GetDatasetsResponse) {
    option (google.api.http) = {
      get: "/api/v1/datasets"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "AccessToken";value: {}}}
    };
  };
  rpc GetDataset (GetDatasetRequest) returns (GetDatasetResponse) {
    option (google.api.http) = {
      get: "/api/v1/dataset"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "AccessToken";value: {}}}
    };
  };
  rpc GetDatasetRows (GetDatasetRowsRequest) returns (GetDatasetRowsResponse) {
    option (google.api.http) = {
      get: "/api/v1/dataset/rows"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {security_requirement: {key: "AccessToken";value: {}}}
    };
  };
}

message CreateDatasetRequest {
  string name = 1;
}

message CreateDatasetResponse {
  int64 datasetID = 1;
}

message UploadDatasetByLinkRequest {
  int64 datasetID = 1;
  string url = 2;
}

message UploadDatasetByLinkResponse {
}

message GetDatasetsRequest {
  uint64 limit = 1;
  uint64 offset = 2;
  string query = 3;
  DatasetStatusFilter statuses = 4;
};

enum DatasetStatus {
  Unknown = 0;
  Initializing = 1;
  Loading = 2;
  Ready = 3;
  Error = 4;
}

message ShortDatasetInfo {
  int64 id = 1;
  string name = 2;
  string version = 3;
  DatasetStatus status = 4;
}

message PageInfo {
  uint64 offset = 1;
  uint64 limit = 2;
  uint64 total = 3;
}

message GetDatasetsResponse {
  repeated ShortDatasetInfo datasets = 1;
  PageInfo pageInfo = 2;
}

message DatasetStatusFilter {
  bool includeInitializing = 1;
  bool includeLoading = 2;
  bool includeReady = 3;
  bool includeError = 4;
}

message GetDatasetRequest {
  int64 datasetID = 1;
}

message Dataset {
  int64 id = 1;
  string name = 2;
  string version = 3;
  DatasetStatus status = 4;
  uint64 rowsCount = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  string uploadError = 8;
}

message GetDatasetResponse {
  Dataset dataset = 1;
}

message GetDatasetRowsRequest {
  int64 datasetID = 1;
  uint64 limit = 2;
  uint64 offset = 3;
}

message DatasetRow {
  uint64 rowNumber = 1;
  repeated google.protobuf.Value columns = 2;
}

message DatasetSchema {
  message SchemaColumn {
    string name = 1;
    string type = 2;
  }

  repeated SchemaColumn columns = 1;
}

message GetDatasetRowsResponse {
  repeated DatasetRow rows = 1;
  DatasetSchema schema = 2;
  PageInfo pageInfo = 3;
}